[versions]
assertj-core-version = "3.26.3"
bean-mapper-api-version = "2.3"
commons-lang3-version = "3.17.0"
data-api-version = "5"
ehcache-version = "2.10.9.2"
generic-mapper-version = "4.1"
gradle-plugin-grgit-version = "5.3.0"
gradle-plugin-license-version = "0.16.1"
gradle-plugin-lombok-version = "8.10.2"
gradle-plugin-spotless-version = "7.0.0.BETA3"
gradle-plugin-version-catalog-update-version = "0.8.4"
gradle-plugin-versions-version = "0.51.0"
hibernate-core-version = "7.0.0.Beta1"
jakarta-persistence-api-version = "3.2.0"
jakarta-servlet-api-version = "6.1.0"
jakarta-validation-api-version = "3.1.0"
jobj-core-version = "9.1"
jobj-reflect-version = "2.4"
junit-jupiter-api-version = "5.11.2"
junit-jupiter-engine-version = "5.11.2"
junit-jupiter-params-version = "5.11.2"
lombok-version = "1.18.34"
mockito-core-version = "5.14.2"
modelmapper-version = "3.2.1"
silly-bean-version = "3.0"
silly-collection-version = "28.1"
spring-batch-infrastructure-version = "5.1.2"
spring-context-support-version = "6.1.13"
spring-context-version = "6.1.13"
spring-data-jpa-version = "3.3.4"
spring-jdbc-version = "6.1.13"
spring-orm-version = "6.1.13"
spring-security-core-version = "6.3.3"
spring-test-version = "6.1.13"
spring-web-version = "6.1.13"
spring-webmvc-version = "6.1.13"
springdoc-openapi-ui-version = "1.8.0"
throwable-version = "3"

[libraries]
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj-core-version" }
bean-mapper-api = { module = "io.github.astrapi69:bean-mapper-api", version.ref = "bean-mapper-api-version" }
commons-lang3 = { module = "org.apache.commons:commons-lang3", version.ref = "commons-lang3-version" }
data-api = { module = "io.github.astrapi69:data-api", version.ref = "data-api-version" }
ehcache = { module = "net.sf.ehcache:ehcache", version.ref = "ehcache-version" }
generic-mapper = { module = "io.github.astrapi69:generic-mapper", version.ref = "generic-mapper-version" }
hibernate-core = { module = "org.hibernate:hibernate-core", version.ref = "hibernate-core-version" }
jakarta-persistence-api = { module = "jakarta.persistence:jakarta.persistence-api", version.ref = "jakarta-persistence-api-version" }
jakarta-servlet-api = { module = "jakarta.servlet:jakarta.servlet-api", version.ref = "jakarta-servlet-api-version" }
jakarta-validation-api = { module = "jakarta.validation:jakarta.validation-api", version.ref = "jakarta-validation-api-version" }
jobj-core = { module = "io.github.astrapi69:jobj-core", version.ref = "jobj-core-version" }
jobj-reflect = { module = "io.github.astrapi69:jobj-reflect", version.ref = "jobj-reflect-version" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit-jupiter-api-version" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit-jupiter-engine-version" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit-jupiter-params-version" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher" }
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok-version" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito-core-version" }
modelmapper = { module = "org.modelmapper:modelmapper", version.ref = "modelmapper-version" }
silly-bean = { module = "io.github.astrapi69:silly-bean", version.ref = "silly-bean-version" }
silly-collection = { module = "io.github.astrapi69:silly-collection", version.ref = "silly-collection-version" }
spring-batch-infrastructure = { module = "org.springframework.batch:spring-batch-infrastructure", version.ref = "spring-batch-infrastructure-version" }
spring-context = { module = "org.springframework:spring-context", version.ref = "spring-context-version" }
spring-context-support = { module = "org.springframework:spring-context-support", version.ref = "spring-context-support-version" }
spring-data-jpa = { module = "org.springframework.data:spring-data-jpa", version.ref = "spring-data-jpa-version" }
spring-jdbc = { module = "org.springframework:spring-jdbc", version.ref = "spring-jdbc-version" }
spring-orm = { module = "org.springframework:spring-orm", version.ref = "spring-orm-version" }
spring-security-core = { module = "org.springframework.security:spring-security-core", version.ref = "spring-security-core-version" }
spring-test = { module = "org.springframework:spring-test", version.ref = "spring-test-version" }
spring-web = { module = "org.springframework:spring-web", version.ref = "spring-web-version" }
spring-webmvc = { module = "org.springframework:spring-webmvc", version.ref = "spring-webmvc-version" }
springdoc-openapi-ui = { module = "org.springdoc:springdoc-openapi-ui", version.ref = "springdoc-openapi-ui-version" }
throwable = { module = "io.github.astrapi69:throwable", version.ref = "throwable-version" }

[bundles]
# Dependencies for the annotation processor used during the compilation process
annotation-processor = [
    "lombok",
]
# Dependencies required only at compile-time and not included in the final artifact
compile-only = [
    "jakarta-persistence-api",
    "lombok",
]
# The core dependencies
core-dependencies = [
    "bean-mapper-api",
    "commons-lang3",
    "data-api",
    "ehcache",
    "generic-mapper",
    "hibernate-core",
    "jakarta-servlet-api",
    "jakarta-validation-api",
    "jobj-core",
    "jobj-reflect",
    "modelmapper",
    "silly-bean",
    "silly-collection",
    "spring-batch-infrastructure",
    "spring-context",
    "spring-context-support",
    "spring-data-jpa",
    "spring-jdbc",
    "spring-orm",
    "spring-security-core",
    "spring-web",
    "spring-webmvc",
    "springdoc-openapi-ui",
    "throwable",
]
# Annotation processor dependencies used specifically for test classes
test-annotation-processor = [
    "lombok",
]
# Dependencies required only at test compile-time and not included in test runtime
test-compile-only = [
    "lombok",
]
# Dependencies required only at test runtime, such as test execution platforms
test-runtime-only = [
    "junit-jupiter-engine",
    "junit-platform-launcher",
]
# Dependencies required for unit testing
unit-testing = [
    "assertj-core",
    "junit-jupiter",
    "junit-jupiter-params",
    "mockito-core",
    "spring-test",
]

[plugins]
gradle-versions-plugin = { id = "com.github.ben-manes.versions", version.ref = "gradle-plugin-versions-version" }
grgit-gradle = { id = "org.ajoberstar.grgit", version.ref = "gradle-plugin-grgit-version" }
license-gradle-plugin = { id = "com.github.hierynomus.license", version.ref = "gradle-plugin-license-version" }
lombok-plugin = { id = "io.freefair.lombok", version.ref = "gradle-plugin-lombok-version" }
spotless-plugin-gradle = { id = "com.diffplug.spotless", version.ref = "gradle-plugin-spotless-version" }
version-catalog-update = { id = "nl.littlerobots.version-catalog-update", version.ref = "gradle-plugin-version-catalog-update-version" }
